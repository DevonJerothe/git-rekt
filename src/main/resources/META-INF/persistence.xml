<?xml version="1.0" encoding="UTF-8"?>
<persistence 
    xmlns="http://java.sun.com/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
    version="2.0">
    
    <persistence-unit name="com.gitrekt.resort">

            <!-- Our JPA implementation is Hibernate -->        
            <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
            
            <class>com.gitrekt.resort.model.entities.GuestFeedback</class>
            <class>com.gitrekt.resort.model.entities.Package</class>
            <class>com.gitrekt.resort.model.entities.Bill</class>
            <class>com.gitrekt.resort.model.entities.BillItem</class>
            <class>com.gitrekt.resort.model.entities.Guest</class>
            <class>com.gitrekt.resort.model.entities.MailingAddress</class>
            <class>com.gitrekt.resort.model.entities.Room</class>
            <class>com.gitrekt.resort.model.entities.RoomCategory</class>
            <class>com.gitrekt.resort.model.entities.Booking</class>
    
        <properties>
            <!-- Configure the DB connection -->
            <!-- Let's all pretend that this isn't a obnoxious security risk -->
        
            <!-- NOTE THAT THIS MEANS THE DATABASE IS NOT STORED IN THE PROJECT
                 TREE. IT IS STORED IN THE ROOT DIRECTORY OF THE SYSTEM -->
            <property name="javax.persistence.jdbc.url"
            value = "jdbc:h2:~/h2/data/test/gitrekt"/>
            <property name="javax.persistence.jdbc.user"
            value="sa"/>
            <property name="javax.persistence.jdbc.password"
            value=""/>
            <property name="javax.persistence.jdbc.driver"
            value = "org.h2.Driver"/>
        
            <!-- For heroku
            <property name="javax.persistence.jdbc.url"
            value = "jdbc:postgresql://ec2-50-19-105-113.compute-1.amazonaws.com:5432/d2gr8k0rr432kv?ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory"/>
            <property name="javax.persistence.jdbc.user"
            value="nvxbcbqkobbbrg"/>
            <property name="javax.persistence.jdbc.password"
            value="0f7e4387f0b8b2bfa71abddd45b2d2323284320e4c7e9ab949460a2ae4fdfcbf"/>
            <property name="javax.persistence.jdbc.driver"
            value = "org.postgresql.Driver"/>
            -->
        
        
            <!-- Configure some Hibernate specific properties -->
        
            <!-- This shows SQL statements executed by Hibernate in the logs -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
        
            <!-- This checks to make sure the actual db tables match our entities-->
            <!-- We should set value to validate at some point -->
            <property name="hibernate.hbm2ddl.auto" value="create"/>
            
            <property name="hibernate.connection.pool_size" value="1"/>
            
            <!-- For heroku
            <property name="hibernate.dialect" 
                      value="org.hibernate.dialect.PostgreSQLDialect"/>
            -->
            
            <!-- For H2 in memory database -->
            <property name="hibernate.dialect"
                      value="org.hibernate.dialect.H2Dialect"/>
            
            <!-- This fixes the slow startup times of hibernate -->
            
            <property name="hibernate.temp.use_jdbc_metadata_defaults" 
                      value="false"/>
            
            <!-- Uncomment to use heroku -->
            <!--
            <property name="hibernate.default_schema" value="resort"/>
            -->
            
            <property name="hibernate.implicit_naming_strategy"
                value="com.gitrekt.resort.hibernate.SnakeCaseNamingStrategy"/>
            
        </properties>
        
    </persistence-unit>
    
</persistence>
