plugins {
    // Standard java plugin for gradle.
    id 'java'
    // Needed to use attribute mainClassName. Pretty standard.
    id 'application'
    // Add the gradle build-scan plugin to let us use a fancy UI to view build
    // results and information in a web browser.
    id 'com.gradle.build-scan' version '1.9'
}

// This is the coolest way I have ever not read the terms of service.
// To view the build scan when you build the project, open the command prompt
// and run ./gradlew build --scan and follow the presented instructions.
buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

mainClassName = 'com.gitrekt.resort.GitRekt'

repositories {
    jcenter()
}

dependencies {
    testCompile('org.junit.jupiter:junit-jupiter-api:5.0.1')
    testCompile('org.junit.platform:junit-platform-gradle-plugin:1.0.1')
    //testCompile('fail.this.shit.plz:fail-it-now:1.0')
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}

gradle.buildFinished { buildResult ->
    if (buildResult.failure) {
        println ''
        println 'Thou shalt NOT push broken code.'
        println 'Violaters will be fed to the garbage collector.'
    } else {
        println ''
        println 'Please make sure you have tested your code before pushing.'
    }
}
